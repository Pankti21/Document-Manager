{
  "Resources": {
    "ElasticBeanStalkApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": "cloud-crowd",
        "Description": "Cloud Crowd Web Application"
      }
    },
    "ElasticBeanStalkDevEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": "cloud-crowd",
        "EnvironmentName": "cloud-crowd-dev",
        "Description": "Cloud Crowd Development Environment",
        "SolutionStackName": "64bit Amazon Linux 2 v5.5.1 running Node.js 16",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "IamInstanceProfile",
            "Value": "aws-elasticbeanstalk-ec2-role"
          }
        ]
      },
      "DependsOn": "ElasticBeanStalkApplication"
    },
    "DynamoDBGroupTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "group",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },
    "DynamoDBGroupFileTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "group_file",
        "KeySchema": [
          {
            "AttributeName": "group_id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "file_id",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "group_id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "file_id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "group_file_index",
            "KeySchema": [
              {
                "AttributeName": "file_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "group_id",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          },
          {
            "IndexName": "group_url_index",
            "KeySchema": [
              {
                "AttributeName": "file_id",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ]
      }
    },
    "DynamoDBPermissionTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "permission",
        "KeySchema": [
          {
            "AttributeName": "group_id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "file_id",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "group_id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "file_id",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },
    "DynamoDBShortenedURLTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "shortened_url",
        "KeySchema": [
          {
            "AttributeName": "file_id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "file_id",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "url_file_index",
            "KeySchema": [
              {
                "AttributeName": "file_id",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },
    "DynamoDBUserTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "user",
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },
    "DynamoDBUserGroupTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "user_group",
        "KeySchema": [
          {
            "AttributeName": "user_email",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "group_id",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "user_email",
            "AttributeType": "S"
          },
          {
            "AttributeName": "group_id",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "user_group_index",
            "KeySchema": [
              {
                "AttributeName": "user_email",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "group_id",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      }
    },
    "S3DevBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "cloud-crowd-dev",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        }
      }
    },
    "LambdaSendVerificationEmailDev": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "sendVerificationEmail",
        "Code": {
          "ZipFile": "const AWS = require(\"aws-sdk\");\nexports.handler = async (event) => {\n    const { email } = event;\n    const params = {\n        EmailAddress: email\n    }\n    \n    AWS.config.update({\"region\": \"us-east-1\"});\n    \n    try {\n        const data = await new AWS.SES().verifyEmailIdentity(params).promise();\n        return {\n            statusCode: 200,\n            body: JSON.stringify(data),\n        };\n    } catch(e) {\n        console.error(e);\n        return {\n            statusCode: 400,\n            body: JSON.stringify(e),\n        };\n    }\n};\n"
        },
        "Role": "arn:aws:iam::342353252634:role/lambda",
        "Description": "Lambda Function for sending verification emails",
        "TracingConfig": {
          "Mode": "Active"
        }
      }
    },
    "LambdaSendEmailDev": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "sendEmail",
        "Code": {
          "ZipFile": "const AWS = require(\"aws-sdk\");\nexports.handler = async (event) => {\n    const {emails, subject, message} = event;\n    AWS.config.update({\"region\": \"us-east-1\"});\n    const params = {\n        ConfigurationSetName: \"cloud-crowd\",\n        Source: \"dalhousiecloudcrowd37@gmail.com\",\n        Destination: {\n            ToAddresses: emails\n        },\n        Message: {\n            Body: {\n                Html: {\n                    Charset: \"UTF-8\",\n                    Data: message\n                },\n                Text: {\n                    Charset: \"UTF-8\",\n                    Data: message\n                }\n            },\n            Subject: {\n                Charset: 'UTF-8',\n                Data: subject\n            }\n        }\n    };\n    try {\n        const data = await new AWS.SES().sendEmail(params).promise();\n        return {\n            statusCode: 200,\n            body: JSON.stringify(data),\n        };\n    } catch (e) {\n        console.error(e);\n        return {\n            statusCode: 400,\n            body: JSON.stringify(e),\n        };\n    }\n};\n"
        },
        "Role": "arn:aws:iam::342353252634:role/lambda",
        "Description": "Lambda Function for sending emails",
        "TracingConfig": {
          "Mode": "Active"
        }
      }
    }
  }
}